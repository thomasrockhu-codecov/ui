// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Molecules / Tooltip Broken Positioning 1`] = `
.c1 {
  margin-top: 160px;
  background-color: transparent;
}

.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  color: #212121;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c6 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: #282823;
  margin: 0;
  font-weight: 400;
  font-size: 12px;
  line-height: 1.3333333333333333;
}

.c4::before,
.c4::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  height: 0;
}

.c4::before {
  left: 0;
  top: 0;
}

.c5 {
  padding: 4px 8px;
  box-shadow: 0 10px 16px rgba(0,0,0,0.16);
  background: #FFFFFF;
  border: solid 1px #BCBCB6;
  max-width: 200px;
  overflow-wrap: break-word;
}

.c3 {
  z-index: 400;
  pointer-events: none;
}

.c3[data-popper-placement^='top'] {
  padding-bottom: 12px;
}

.c3[data-popper-placement^='bottom'] {
  padding-top: 12px;
}

.c3[data-popper-placement^='left'] {
  padding-right: 12px;
}

.c3[data-popper-placement^='right'] {
  padding-left: 12px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <svg
      aria-describedby=""
      aria-hidden="true"
      className="c2"
      focusable="false"
      height={16}
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
      preserveAspectRatio="xMidYMid meet"
      role="presentation"
      width={16}
    >
      <path
        clipRule="evenodd"
        d="M14.693 2.48L13.52 1.31a3 3 0 00-4.242 0L.4 10.187v5.415h5.414l8.879-8.88a3 3 0 000-4.242zm-2.586.243l1.172 1.171a1 1 0 010 1.415l-.707.707L9.986 3.43l.707-.707a1 1 0 011.414 0zM8.572 4.844L2.4 11.016v2.586h2.586l6.171-6.172-2.585-2.586z"
        fill="currentColor"
        fillRule="evenodd"
      />
    </svg>
    <portal-dummy>
      <span
        className="c3"
        id=""
        style={
          Object {
            "left": "0",
            "position": "absolute",
            "top": "0",
          }
        }
      >
        <span
          className="c4"
          style={
            Object {
              "position": "absolute",
            }
          }
        />
        <div
          className="c5 "
        >
          <span
            className="c6"
          >
            This tooltip has children which doesn't handle refs correctly. Thus, it's positioning doesn't work properly. See wrapChild for examples of how to fix this.
          </span>
        </div>
      </span>
    </portal-dummy>
  </div>
</div>
`;

exports[`Storyshots Molecules / Tooltip Controlled Open 1`] = `
Array [
  .c0 {
  display: block;
}

<button
    className="c0"
    onClick={[Function]}
  >
    Toogle Tooltip
  </button>,
  .c1 {
  margin-top: 40px;
  background-color: transparent;
}

.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  color: #212121;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c6 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: #282823;
  margin: 0;
  font-weight: 400;
  font-size: 12px;
  line-height: 1.3333333333333333;
}

.c4::before,
.c4::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  height: 0;
}

.c4::before {
  left: 0;
  top: 0;
}

.c5 {
  padding: 4px 8px;
  box-shadow: 0 10px 16px rgba(0,0,0,0.16);
  background: #FFFFFF;
  border: solid 1px #BCBCB6;
  max-width: 200px;
  overflow-wrap: break-word;
}

.c3 {
  z-index: 400;
  pointer-events: none;
}

.c3[data-popper-placement^='top'] {
  padding-bottom: 12px;
}

.c3[data-popper-placement^='bottom'] {
  padding-top: 12px;
}

.c3[data-popper-placement^='left'] {
  padding-right: 12px;
}

.c3[data-popper-placement^='right'] {
  padding-left: 12px;
}

<div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        aria-describedby="nn-tooltip-56"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
      >
        <svg
          aria-hidden="true"
          className="c2"
          focusable="false"
          height={16}
          preserveAspectRatio="xMidYMid meet"
          role="presentation"
          width={16}
        >
          <path
            clipRule="evenodd"
            d="M14.693 2.48L13.52 1.31a3 3 0 00-4.242 0L.4 10.187v5.415h5.414l8.879-8.88a3 3 0 000-4.242zm-2.586.243l1.172 1.171a1 1 0 010 1.415l-.707.707L9.986 3.43l.707-.707a1 1 0 011.414 0zM8.572 4.844L2.4 11.016v2.586h2.586l6.171-6.172-2.585-2.586z"
            fill="currentColor"
            fillRule="evenodd"
          />
        </svg>
      </div>
      <portal-dummy>
        <span
          className="c3"
          id="nn-tooltip-56"
          style={
            Object {
              "left": "0",
              "position": "absolute",
              "top": "0",
            }
          }
        >
          <span
            className="c4"
            style={
              Object {
                "position": "absolute",
              }
            }
          />
          <div
            className="c5 "
          >
            <span
              className="c6"
            >
              This is a controlled tooltip.
            </span>
          </div>
        </span>
      </portal-dummy>
    </div>
  </div>,
]
`;

exports[`Storyshots Molecules / Tooltip Custom max-width 1`] = `
.c0 {
  display: block;
}

<button
  className="c0"
  onBlur={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseMove={[Function]}
  type="button"
>
  Hover me
</button>
`;

exports[`Storyshots Molecules / Tooltip Default 1`] = `
Array [
  .c1 {
  display: block;
}

.c0 {
  margin: 20px 0 20px 20px;
}

<div
    className="c0"
  >
    Default delays
    <button
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
      type="button"
    >
      Hover me
    </button>
  </div>,
  .c1 {
  display: block;
}

.c0 {
  margin: 20px 0 20px 20px;
}

<div
    className="c0"
  >
    Open delay: 2000ms; Close delay: 3000ms
    <button
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
      type="button"
    >
      Hover me
    </button>
  </div>,
  .c1 {
  display: block;
}

.c0 {
  margin: 20px 0 20px 20px;
}

<div
    className="c0"
  >
    Open delay: 10ms; Close delay: 10ms
    <button
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
      type="button"
    >
      Hover me
    </button>
  </div>,
  .c1 {
  display: block;
}

.c0 {
  margin: 20px 0 20px 20px;
}

<div
    className="c0"
  >
    Open delay: 0ms; Close delay: 0ms
    <button
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
      type="button"
    >
      Hover me
    </button>
  </div>,
]
`;

exports[`Storyshots Molecules / Tooltip Integration: With Drawer and Modal 1`] = `
.c6 {
  margin-bottom: 16px;
  background-color: transparent;
}

.c4 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 16px;
  height: 16px;
  fill: #282823;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c3 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: inherit;
  margin: 0;
  font-weight: 700;
  font-size: 14px;
  line-height: 1.4285714285714286;
}

.c1 {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  position: relative;
  box-sizing: border-box;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 0;
  background-color: transparent;
  color: #282823;
  border: none;
  border-radius: 0;
  cursor: pointer;
}

.c1,
.c1[type='button'],
.c1[type='reset'],
.c1[type='submit'] {
  -webkit-appearance: button;
}

.c1::-moz-focus-inner,
.c1[type='button']::-moz-focus-inner,
.c1[type='reset']::-moz-focus-inner,
.c1[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c1:-moz-focusring,
.c1[type='button']:-moz-focusring,
.c1[type='reset']:-moz-focusring,
.c1[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText;
}

.c2 {
  position: absolute;
  top: 20px;
  right: 20px;
}

.c5 {
  overflow-y: auto;
  overflow-x: hidden;
  margin-bottom: 20px;
  padding: 1px 20px;
}

.c0 {
  padding: 20px 20px 0 20px;
  margin-bottom: 8px;
  min-height: 20px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c7 {
  display: block;
}

@media (min-width:760px) {

}

@media (min-width:1600px) {

}

@media (max-width:759px) {
  .c5 {
    padding: 1px 12px;
  }
}

@media (max-width:759px) {
  .c0 {
    padding: 20px 12px 0 12px;
  }
}

<portal-dummy>
  <div
    data-focus-guard={true}
    style={
      Object {
        "height": "0px",
        "left": "1px",
        "overflow": "hidden",
        "padding": 0,
        "position": "fixed",
        "top": "1px",
        "width": "1px",
      }
    }
    tabIndex={0}
  />
  <div
    data-focus-guard={true}
    style={
      Object {
        "height": "0px",
        "left": "1px",
        "overflow": "hidden",
        "padding": 0,
        "position": "fixed",
        "top": "1px",
        "width": "1px",
      }
    }
    tabIndex={1}
  />
  <div
    data-focus-lock-disabled={false}
    onBlur={[Function]}
    onFocus={[Function]}
  >
    <div
      onScrollCapture={[Function]}
      onTouchMoveCapture={[Function]}
      onWheelCapture={[Function]}
    >
      <div>
        <div
          className="c0"
          onTouchStart={[Function]}
        >
          <button
            className="NormalizedButton__Button-sc-ey7f5x-0 c1 c2"
            onClick={[Function]}
            type="button"
          >
            <span
              className="c3"
            >
              <svg
                aria-hidden="true"
                className="c4"
                focusable="false"
                preserveAspectRatio="xMidYMid meet"
                role="presentation"
                viewBox="0 0 16 16"
              >
                <path
                  d="M6.857 8L0 1.143 1.143 0 8 6.857 14.857 0 16 1.143 9.143 8 16 14.857 14.857 16 8 9.143 1.143 16 0 14.857z"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </button>
        </div>
        <div
          className="c5"
        >
          <div
            className="c6"
          >
            <button
              className="c7"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseMove={[Function]}
            >
              Hover me
            </button>
          </div>
          <button
            className="c7"
            onClick={[Function]}
          >
            Open modal
          </button>
        </div>
      </div>
    </div>
  </div>
  <div
    data-focus-guard={true}
    style={
      Object {
        "height": "0px",
        "left": "1px",
        "overflow": "hidden",
        "padding": 0,
        "position": "fixed",
        "top": "1px",
        "width": "1px",
      }
    }
    tabIndex={0}
  />
</portal-dummy>
`;

exports[`Storyshots Molecules / Tooltip With Clickable Content 1`] = `
.c1 {
  margin-top: 160px;
  background-color: transparent;
}

.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  color: #212121;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c3 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: inherit;
  margin: 0;
  font-weight: 700;
  font-size: 14px;
  line-height: 1.4285714285714286;
}

.c2 {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  position: relative;
  box-sizing: border-box;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 0;
  background-color: transparent;
  color: #282823;
  border: none;
  border-radius: 0;
  cursor: pointer;
}

.c2,
.c2[type='button'],
.c2[type='reset'],
.c2[type='submit'] {
  -webkit-appearance: button;
}

.c2::-moz-focus-inner,
.c2[type='button']::-moz-focus-inner,
.c2[type='reset']::-moz-focus-inner,
.c2[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c2:-moz-focusring,
.c2[type='button']:-moz-focusring,
.c2[type='reset']:-moz-focusring,
.c2[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <span
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
    >
      <button
        className="NormalizedButton__Button-sc-ey7f5x-0 c2"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c3"
        >
          <svg
            aria-hidden="true"
            className="c4"
            focusable="false"
            height={16}
            preserveAspectRatio="xMidYMid meet"
            role="presentation"
            width={16}
          >
            <path
              clipRule="evenodd"
              d="M14.693 2.48L13.52 1.31a3 3 0 00-4.242 0L.4 10.187v5.415h5.414l8.879-8.88a3 3 0 000-4.242zm-2.586.243l1.172 1.171a1 1 0 010 1.415l-.707.707L9.986 3.43l.707-.707a1 1 0 011.414 0zM8.572 4.844L2.4 11.016v2.586h2.586l6.171-6.172-2.585-2.586z"
              fill="currentColor"
              fillRule="evenodd"
            />
          </svg>
        </span>
      </button>
    </span>
  </div>
</div>
`;

exports[`Storyshots Molecules / Tooltip With Offset 1`] = `
.c0 {
  padding: 80px;
  background-color: transparent;
}

.c1 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: -8px;
  margin-right: -8px;
}

.c1 > * {
  padding-left: 8px;
  padding-right: 8px;
}

.c1 > *:not(:first-child) {
  padding-top: 0;
}

.c3 {
  color: #212121;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c2 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: #282823;
  margin: 0;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.5;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <span
      className="c2"
    >
      Hover the pen!
    </span>
    <span
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
    >
      <svg
        aria-hidden="true"
        className="c3"
        focusable="false"
        height={16}
        preserveAspectRatio="xMidYMid meet"
        role="presentation"
        width={16}
      >
        <path
          clipRule="evenodd"
          d="M14.693 2.48L13.52 1.31a3 3 0 00-4.242 0L.4 10.187v5.415h5.414l8.879-8.88a3 3 0 000-4.242zm-2.586.243l1.172 1.171a1 1 0 010 1.415l-.707.707L9.986 3.43l.707-.707a1 1 0 011.414 0zM8.572 4.844L2.4 11.016v2.586h2.586l6.171-6.172-2.585-2.586z"
          fill="currentColor"
          fillRule="evenodd"
        />
      </svg>
    </span>
  </div>
</div>
`;

exports[`Storyshots Molecules / Tooltip With Offset As A Function 1`] = `
.c0 {
  padding: 80px;
  background-color: transparent;
}

.c1 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: -8px;
  margin-right: -8px;
}

.c1 > * {
  padding-left: 8px;
  padding-right: 8px;
}

.c1 > *:not(:first-child) {
  padding-top: 0;
}

.c3 {
  color: #212121;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c2 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: #282823;
  margin: 0;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.5;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <span
      className="c2"
    >
      Hover the pen!
    </span>
    <span
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
    >
      <svg
        aria-hidden="true"
        className="c3"
        focusable="false"
        height={16}
        preserveAspectRatio="xMidYMid meet"
        role="presentation"
        width={16}
      >
        <path
          clipRule="evenodd"
          d="M14.693 2.48L13.52 1.31a3 3 0 00-4.242 0L.4 10.187v5.415h5.414l8.879-8.88a3 3 0 000-4.242zm-2.586.243l1.172 1.171a1 1 0 010 1.415l-.707.707L9.986 3.43l.707-.707a1 1 0 011.414 0zM8.572 4.844L2.4 11.016v2.586h2.586l6.171-6.172-2.585-2.586z"
          fill="currentColor"
          fillRule="evenodd"
        />
      </svg>
    </span>
  </div>
</div>
`;

exports[`Storyshots Molecules / Tooltip With On Click Mode 1`] = `
.c0 {
  display: block;
}

<button
  className="c0"
  onBlur={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseMove={[Function]}
  type="button"
>
  Click me
</button>
`;

exports[`Storyshots Molecules / Tooltip With Very Long Word 1`] = `
.c0 {
  display: block;
}

<button
  className="c0"
  onBlur={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseMove={[Function]}
  type="button"
>
  Hover me
</button>
`;

exports[`Storyshots Molecules / Tooltip With position defined 1`] = `
.c3 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: #282823;
  margin: 0;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.5;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border: 0px;
}

.c0 > * {
  padding: 0px;
  width: 100%;
  box-sizing: border-box;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  border: 1px solid #eee;
}

.c1 > * {
  padding: 20px;
  width: 100%;
  box-sizing: border-box;
}

.c2 {
  border-right: 1px solid #eee;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4 {
  display: block;
}

<div
  className="c0"
  direction="column"
>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        bottom
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        left
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        top
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        right
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        right-start
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        right-end
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        top-start
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        top-end
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        left-start
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        left-end
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        bottom-start
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        bottom-end
      </span>
    </div>
    <div>
      <button
        className="c4"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Molecules / Tooltip Wrap Child 1`] = `
Array [
  .c1 {
  margin-top: 80px;
  background-color: transparent;
}

.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  color: #212121;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c6 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: #282823;
  margin: 0;
  font-weight: 400;
  font-size: 12px;
  line-height: 1.3333333333333333;
}

.c4::before,
.c4::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  height: 0;
}

.c4::before {
  left: 0;
  top: 0;
}

.c5 {
  padding: 4px 8px;
  box-shadow: 0 10px 16px rgba(0,0,0,0.16);
  background: #FFFFFF;
  border: solid 1px #BCBCB6;
  max-width: 200px;
  overflow-wrap: break-word;
}

.c3 {
  z-index: 400;
  pointer-events: none;
}

.c3[data-popper-placement^='top'] {
  padding-bottom: 12px;
}

.c3[data-popper-placement^='bottom'] {
  padding-top: 12px;
}

.c3[data-popper-placement^='left'] {
  padding-right: 12px;
}

.c3[data-popper-placement^='right'] {
  padding-left: 12px;
}

<div
    className="c0"
  >
    <div
      className="c1"
    >
      <span
        aria-describedby="nn-tooltip-57"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
      >
        <svg
          aria-hidden="true"
          className="c2"
          focusable="false"
          height={16}
          preserveAspectRatio="xMidYMid meet"
          role="presentation"
          width={16}
        >
          <path
            clipRule="evenodd"
            d="M14.693 2.48L13.52 1.31a3 3 0 00-4.242 0L.4 10.187v5.415h5.414l8.879-8.88a3 3 0 000-4.242zm-2.586.243l1.172 1.171a1 1 0 010 1.415l-.707.707L9.986 3.43l.707-.707a1 1 0 011.414 0zM8.572 4.844L2.4 11.016v2.586h2.586l6.171-6.172-2.585-2.586z"
            fill="currentColor"
            fillRule="evenodd"
          />
        </svg>
      </span>
      <portal-dummy>
        <span
          className="c3"
          id="nn-tooltip-57"
          style={
            Object {
              "left": "0",
              "position": "absolute",
              "top": "0",
            }
          }
        >
          <span
            className="c4"
            style={
              Object {
                "position": "absolute",
              }
            }
          />
          <div
            className="c5 "
          >
            <span
              className="c6"
            >
              With the wrapChiild prop, a DOM element of type span wraps the children, this guarantees a element in the DOM to work properly with ref (and thus positioning).
            </span>
          </div>
        </span>
      </portal-dummy>
    </div>
  </div>,
  .c1 {
  margin-top: 160px;
  background-color: transparent;
}

.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  color: #212121;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c6 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: #282823;
  margin: 0;
  font-weight: 400;
  font-size: 12px;
  line-height: 1.3333333333333333;
}

.c4::before,
.c4::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  height: 0;
}

.c4::before {
  left: 0;
  top: 0;
}

.c5 {
  padding: 4px 8px;
  box-shadow: 0 10px 16px rgba(0,0,0,0.16);
  background: #FFFFFF;
  border: solid 1px #BCBCB6;
  max-width: 200px;
  overflow-wrap: break-word;
}

.c3 {
  z-index: 400;
  pointer-events: none;
}

.c3[data-popper-placement^='top'] {
  padding-bottom: 12px;
}

.c3[data-popper-placement^='bottom'] {
  padding-top: 12px;
}

.c3[data-popper-placement^='left'] {
  padding-right: 12px;
}

.c3[data-popper-placement^='right'] {
  padding-left: 12px;
}

<div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        aria-describedby="nn-tooltip-58"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
      >
        <svg
          aria-hidden="true"
          className="c2"
          focusable="false"
          height={16}
          preserveAspectRatio="xMidYMid meet"
          role="presentation"
          width={16}
        >
          <path
            clipRule="evenodd"
            d="M14.693 2.48L13.52 1.31a3 3 0 00-4.242 0L.4 10.187v5.415h5.414l8.879-8.88a3 3 0 000-4.242zm-2.586.243l1.172 1.171a1 1 0 010 1.415l-.707.707L9.986 3.43l.707-.707a1 1 0 011.414 0zM8.572 4.844L2.4 11.016v2.586h2.586l6.171-6.172-2.585-2.586z"
            fill="currentColor"
            fillRule="evenodd"
          />
        </svg>
      </div>
      <portal-dummy>
        <span
          className="c3"
          id="nn-tooltip-58"
          style={
            Object {
              "left": "0",
              "position": "absolute",
              "top": "0",
            }
          }
        >
          <span
            className="c4"
            style={
              Object {
                "position": "absolute",
              }
            }
          />
          <div
            className="c5 "
          >
            <span
              className="c6"
            >
              This tooltip doesn't use the wrapChild prop, but has a children that correctly handles refs
            </span>
          </div>
        </span>
      </portal-dummy>
    </div>
  </div>,
]
`;
