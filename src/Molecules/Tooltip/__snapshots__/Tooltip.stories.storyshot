// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Molecules / Tooltip Default 1`] = `
.c0 {
  display: block;
}

<button
  className="c0"
  data-reach-tooltip-trigger=""
  onBlur={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseMove={[Function]}
  type="button"
>
  Hover me
</button>
`;

exports[`Storyshots Molecules / Tooltip Integration: With Drawer and Modal 1`] = `
.c6 {
  margin-bottom: 16px;
}

.c4 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 16px;
  height: 16px;
  fill: #282823;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: block;
}

.c3 {
  font-family: 'Nordnet Sans Mono',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;
  color: inherit;
  margin: 0;
  font-weight: 700;
  font-size: 14px;
  line-height: 1.4285714285714286;
}

.c1 {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  position: relative;
  box-sizing: border-box;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 0;
  background-color: transparent;
  color: #282823;
  border: none;
  border-radius: 0;
  cursor: pointer;
}

.c1,
.c1[type='button'],
.c1[type='reset'],
.c1[type='submit'] {
  -webkit-appearance: button;
}

.c1::-moz-focus-inner,
.c1[type='button']::-moz-focus-inner,
.c1[type='reset']::-moz-focus-inner,
.c1[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c1:-moz-focusring,
.c1[type='button']:-moz-focusring,
.c1[type='reset']:-moz-focusring,
.c1[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText;
}

.c2 {
  position: absolute;
  top: 20px;
  right: 20px;
}

.c5 {
  overflow-y: auto;
  overflow-x: hidden;
  margin-bottom: 20px;
  padding: 0 20px;
}

.c0 {
  padding: 20px 20px 0 20px;
  margin-bottom: 8px;
  min-height: 20px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c7 {
  display: block;
}

@media (min-width:760px) {

}

@media (min-width:1600px) {

}

<portal-dummy>
  <div
    data-focus-guard={true}
    style={
      Object {
        "height": "0px",
        "left": "1px",
        "overflow": "hidden",
        "padding": 0,
        "position": "fixed",
        "top": "1px",
        "width": "1px",
      }
    }
    tabIndex={0}
  />
  <div
    data-focus-guard={true}
    style={
      Object {
        "height": "0px",
        "left": "1px",
        "overflow": "hidden",
        "padding": 0,
        "position": "fixed",
        "top": "1px",
        "width": "1px",
      }
    }
    tabIndex={1}
  />
  <div
    data-focus-lock-disabled={false}
    onBlur={[Function]}
    onFocus={[Function]}
  >
    <div
      onScrollCapture={[Function]}
      onTouchMoveCapture={[Function]}
      onWheelCapture={[Function]}
    >
      <div>
        <div
          className="c0"
          onTouchStart={[Function]}
        >
          <button
            className="NormalizedButton__Button-ey7f5x-0 c1 c2"
            onClick={[Function]}
            type="button"
          >
            <span
              className="c3"
            >
              <svg
                aria-hidden="false"
                className="c4"
                focusable="false"
                preserveAspectRatio="xMidYMid meet"
                role="img"
                viewBox="0 0 16 16"
              >
                <path
                  d="M6.857 8L0 1.143 1.143 0 8 6.857 14.857 0 16 1.143 9.143 8 16 14.857 14.857 16 8 9.143 1.143 16 0 14.857z"
                  fillRule="evenodd"
                />
                <title>
                  Close this drawer
                </title>
              </svg>
            </span>
          </button>
        </div>
        <div
          className="c5"
        >
          <div
            className="c6"
          >
            <button
              className="c7"
              data-reach-tooltip-trigger=""
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseMove={[Function]}
            >
              Hover me
            </button>
          </div>
          <button
            className="c7"
            onClick={[Function]}
          >
            Open modal
          </button>
        </div>
      </div>
    </div>
  </div>
  <div
    data-focus-guard={true}
    style={
      Object {
        "height": "0px",
        "left": "1px",
        "overflow": "hidden",
        "padding": 0,
        "position": "fixed",
        "top": "1px",
        "width": "1px",
      }
    }
    tabIndex={0}
  />
</portal-dummy>
`;

exports[`Storyshots Molecules / Tooltip With position defined 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border: 0px;
}

.c0 > * {
  padding: 0px;
  width: 100%;
  box-sizing: border-box;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  border: 1px solid #eee;
}

.c1 > * {
  padding: 20px;
  width: 100%;
  box-sizing: border-box;
}

.c2 {
  border-right: 1px solid #eee;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c3 {
  display: block;
}

<div
  className="c0"
  direction="column"
>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      bottom
    </div>
    <div>
      <button
        className="c3"
        data-reach-tooltip-trigger=""
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      left
    </div>
    <div>
      <button
        className="c3"
        data-reach-tooltip-trigger=""
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      top
    </div>
    <div>
      <button
        className="c3"
        data-reach-tooltip-trigger=""
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    className="c1"
    direction="row"
  >
    <div
      className="c2"
    >
      right
    </div>
    <div>
      <button
        className="c3"
        data-reach-tooltip-trigger=""
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        type="button"
      >
        Hover me
      </button>
    </div>
  </div>
</div>
`;
